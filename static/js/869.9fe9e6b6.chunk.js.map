{"version":3,"file":"static/js/869.9fe9e6b6.chunk.js","mappings":"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","sources":["components/form.js","components/contacts.js","components/filter.js","components/wraperContacts.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../operations';\nimport { selectContacts } from '../redux/selector';\n\nconst FormAddcontacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(0);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkingContacts = name => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isContactsInclude = checkingContacts(name);\n\n    if (isContactsInclude) {\n      alert(`${name} is alredy in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(data));\n\n    event.currentTarget.reset();\n  };\n\n  const data = {\n    name: name,\n    number: number,\n  };\n\n  return (\n    <div style={{ padding: 20, paddingBottom: 0 }}>\n      <h1>Phonebook</h1>\n\n      <form onSubmit={handleSubmit}>\n        <label style={{ display: 'block', margin: 20 }}>\n          Name\n          <input\n            style={{ marginLeft: 10 }}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"ivan vasulovuch\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label style={{ display: 'block', margin: 20, marginLeft: 5 }}>\n          Number\n          <input\n            style={{ marginLeft: 10 }}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-111-11-11\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button style={{ marginLeft: 150 }}>Added contact</button>\n      </form>\n    </div>\n  );\n};\nexport default FormAddcontacts;\n","import { deleteContact } from '../operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from '../redux/selector';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <ul>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} style={{ margin: 10 }}>\n              <span>\n                {name}: {number}\n              </span>\n              <button\n                style={{ marginLeft: 15 }}\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      {isLoading && (\n        <div style={{ marginTop: 20, marginLeft: 50 }}> Loading... </div>\n      )}\n      {isError && (\n        <div style={{ marginTop: 100, marginLeft: 50 }}>{isError}</div>\n      )}\n    </div>\n  );\n};\nexport default Contacts;\n","import { useDispatch } from 'react-redux';\nimport { searchContacts } from '../redux/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div style={{ padding: 20, paddingBottom: 0 }}>\n      <h1>Contacts</h1>\n      <label>\n        Find contacts by name\n        <input\n          style={{ marginLeft: 10 }}\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(searchContacts(e.target.value.toLowerCase()));\n          }}\n        ></input>\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import { fetchContact } from 'operations';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FormAddcontacts from 'components/form';\nimport Contacts from 'components/contacts';\nimport Filter from 'components/filter';\n\nconst WraperContacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <FormAddcontacts></FormAddcontacts>\n      <Filter></Filter>\n      <Contacts></Contacts>\n    </>\n  );\n};\nexport default WraperContacts;\n"],"names":["dispatch","useDispatch","contacts","useSelector","selectContacts","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","data","style","padding","paddingBottom","onSubmit","preventDefault","isContactsInclude","some","contact","toLowerCase","checkingContacts","alert","addContact","reset","display","margin","marginLeft","onChange","type","placeholder","title","required","isLoading","selectIsLoading","isError","selectError","visibleContacts","selectVisibleContacts","map","id","onClick","deleteContact","marginTop","e","searchContacts","target","useEffect","fetchContact"],"sourceRoot":""}