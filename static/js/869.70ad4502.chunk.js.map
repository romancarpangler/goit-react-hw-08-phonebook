{"version":3,"file":"static/js/869.70ad4502.chunk.js","mappings":"yOAuEA,EAnEwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,OAEL,EAEKC,EAAO,CACXR,KAAMA,EACNE,OAAQA,GAGV,OACE,iBAAKO,MAAO,CAAEC,QAAS,GAAIC,cAAe,GAA1C,WACE,uCAEA,kBACEC,SAAU,SAAAP,GACRA,EAAMQ,iBACNhB,GAASiB,EAAAA,EAAAA,IAAWN,IACpBH,EAAMC,cAAcS,OACrB,EALH,WAOE,mBAAON,MAAO,CAAEO,QAAS,QAASC,OAAQ,IAA1C,kBAEE,kBACER,MAAO,CAAES,WAAY,IACrBC,SAAUf,EACVgB,KAAK,OACLpB,KAAK,OACLqB,YAAY,kBACZC,MAAM,yIACNC,UAAQ,QAIZ,mBAAOd,MAAO,CAAEO,QAAS,QAASC,OAAQ,GAAIC,WAAY,GAA1D,oBAEE,kBACET,MAAO,CAAES,WAAY,IACrBC,SAAUf,EACVgB,KAAK,MACLpB,KAAK,SACLqB,YAAY,gBACZC,MAAM,+FACNC,UAAQ,QAIZ,mBAAQd,MAAO,CAAES,WAAY,KAA7B,gCAIP,E,UCxBD,EAtCiB,WACf,IAAMrB,GAAWC,EAAAA,EAAAA,MAEX0B,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAkBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEpC,OACE,iBAAKrB,MAAO,CAAEC,QAAS,IAAvB,WACE,wBACGmB,EAAgBE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIhC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OACE,gBAAaO,MAAO,CAAEQ,OAAQ,IAA9B,WACE,4BACGjB,EADH,KACWE,MAEX,mBACEO,MAAO,CAAES,WAAY,IACrBE,KAAK,SACLa,QAAS,WACPpC,GAASqC,EAAAA,EAAAA,IAAcF,GACxB,EALH,sBAJOA,EAeZ,MAEFR,IACC,gBAAKf,MAAO,CAAE0B,UAAW,GAAIjB,WAAY,IAAzC,0BAEDS,IACC,gBAAKlB,MAAO,CAAE0B,UAAW,IAAKjB,WAAY,IAA1C,SAAiDS,MAIxD,E,UCtBD,EApBe,WACb,IAAM9B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKW,MAAO,CAAEC,QAAS,GAAIC,cAAe,GAA1C,WACE,sCACA,sDAEE,kBACEF,MAAO,CAAES,WAAY,IACrBE,KAAK,OACLpB,KAAK,SACLmB,SAAU,SAAAiB,GACRvC,GAASwC,EAAAA,EAAAA,IAAeD,EAAEE,OAAO/B,MAAMgC,eACxC,SAKV,ECAD,EAfuB,WACrB,IAAM1C,GAAWC,EAAAA,EAAAA,MAMjB,OAJA0C,EAAAA,EAAAA,YAAU,WACR3C,GAAS4C,EAAAA,EAAAA,MACV,GAAE,CAAC5C,KAGF,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/form.js","components/contacts.js","components/filter.js","components/wraperContacts.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../operations';\n\nconst FormAddcontacts = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState(0);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const data = {\n    name: name,\n    number: number,\n  };\n\n  return (\n    <div style={{ padding: 20, paddingBottom: 0 }}>\n      <h1>Phonebook</h1>\n\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          dispatch(addContact(data));\n          event.currentTarget.reset();\n        }}\n      >\n        <label style={{ display: 'block', margin: 20 }}>\n          Name\n          <input\n            style={{ marginLeft: 10 }}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"ivan vasulovuch\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label style={{ display: 'block', margin: 20, marginLeft: 5 }}>\n          Number\n          <input\n            style={{ marginLeft: 10 }}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"111-111-11-11\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button style={{ marginLeft: 150 }}>Added contact</button>\n      </form>\n    </div>\n  );\n};\nexport default FormAddcontacts;\n","import { deleteContact } from '../operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from '../redux/selector';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const isError = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <ul>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <li key={id} style={{ margin: 10 }}>\n              <span>\n                {name}: {number}\n              </span>\n              <button\n                style={{ marginLeft: 15 }}\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n      {isLoading && (\n        <div style={{ marginTop: 20, marginLeft: 50 }}> Loading... </div>\n      )}\n      {isError && (\n        <div style={{ marginTop: 100, marginLeft: 50 }}>{isError}</div>\n      )}\n    </div>\n  );\n};\nexport default Contacts;\n","import { useDispatch } from 'react-redux';\nimport { searchContacts } from '../redux/slice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div style={{ padding: 20, paddingBottom: 0 }}>\n      <h1>Contacts</h1>\n      <label>\n        Find contacts by name\n        <input\n          style={{ marginLeft: 10 }}\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => {\n            dispatch(searchContacts(e.target.value.toLowerCase()));\n          }}\n        ></input>\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import { fetchContact } from 'operations';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport FormAddcontacts from 'components/form';\nimport Contacts from 'components/contacts';\nimport Filter from 'components/filter';\n\nconst WraperContacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <FormAddcontacts></FormAddcontacts>\n      <Filter></Filter>\n      <Contacts></Contacts>\n    </>\n  );\n};\nexport default WraperContacts;\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","data","style","padding","paddingBottom","onSubmit","preventDefault","addContact","reset","display","margin","marginLeft","onChange","type","placeholder","title","required","isLoading","useSelector","selectIsLoading","isError","selectError","visibleContacts","selectVisibleContacts","map","id","onClick","deleteContact","marginTop","e","searchContacts","target","toLowerCase","useEffect","fetchContact"],"sourceRoot":""}